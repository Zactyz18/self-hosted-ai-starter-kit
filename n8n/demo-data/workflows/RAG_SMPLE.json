{
  "name": "RAG SMPLE",
  "nodes": [
    {
      "parameters": {
        "protocol": "sftp",
        "path": "/Software Dev/MLK RAG/sample_company_report.txt"
      },
      "type": "n8n-nodes-base.ftp",
      "typeVersion": 1,
      "position": [
        -240,
        -200
      ],
      "id": "109ce793-23b0-4ef1-a9d2-446ac1488ec9",
      "name": "FTP",
      "credentials": {
        "sftp": {
          "id": "Dr2xIWUon9QlHWEm",
          "name": "FTP account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "=documentsauto",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.1,
      "position": [
        -20,
        -200
      ],
      "id": "71745188-8181-4bc9-b3f9-17309caa1e40",
      "name": "Qdrant Vector Store",
      "credentials": {
        "qdrantApi": {
          "id": "sFfERYppMeBnFNeA",
          "name": "Local QdrantApi database"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-ada-002",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -60,
        -40
      ],
      "id": "d88a22d8-f2f4-4039-ab59-d25c11440e79",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "131kurNlXcu1qyJZ",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        140,
        -20
      ],
      "id": "f54b95aa-2b6f-43c5-b01e-2ff1761d4d35",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "chunkSize": 250,
        "chunkOverlap": 50,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        240,
        200
      ],
      "id": "5437aa7f-ddfa-473b-9874-c7648b8d88f2",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "content": "## Ingestion\n",
        "height": 780,
        "width": 1240
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -560,
        -320
      ],
      "typeVersion": 1,
      "id": "9cf578af-5ce1-47eb-b844-56a3a421978e",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Retireval",
        "height": 640,
        "width": 1240,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -560,
        520
      ],
      "typeVersion": 1,
      "id": "b9d1e308-0ac1-4584-8568-101304f45886",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -660,
        1640
      ],
      "id": "686783ea-c65e-48dc-8af5-a8dec05a6242",
      "name": "When chat message received",
      "webhookId": "00af113d-64d1-4df9-96b2-f8e91ff033e0"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a “Company Monthly Report – July 2025” financial document assistant.\nYour job is to answer user questions by first searching the Vector Database for the most relevant text chunks from the July 2025 Company Monthly Report, and then using those chunks to construct your answer.\n\nHow to respond:\n\nSearch the vector store for similar text chunks using RAG.\n\nIf you can’t find an answer in the report, say:\n“I couldn’t find this in the July 2025 Company Monthly Report.”\n\nDo not guess or invent information."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -280,
        600
      ],
      "id": "359d8162-65fa-4cc2-a91e-26af0421e67e",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -260,
        820
      ],
      "id": "7149ee6f-9488-4cc0-a50c-6b4d21e28f80",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "131kurNlXcu1qyJZ",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -140,
        1040
      ],
      "id": "15eb5599-e9af-47c5-9881-e2dbac13a6a9",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "documents",
        "toolDescription": "work with you data in qdrant vector store",
        "qdrantCollection": {
          "__rl": true,
          "value": "documentsmetadata",
          "mode": "list",
          "cachedResultName": "documentsmetadata"
        },
        "topK": 5,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.1,
      "position": [
        -60,
        840
      ],
      "id": "8d829a7b-e14f-4cd0-8d8c-1e02d385ba2e",
      "name": "Qdrant Vector Store1",
      "credentials": {
        "qdrantApi": {
          "id": "sFfERYppMeBnFNeA",
          "name": "Local QdrantApi database"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-ada-002",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        40,
        980
      ],
      "id": "70f69622-c108-429d-9012-5ca445fdf8c5",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "131kurNlXcu1qyJZ",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "protocol": "sftp",
        "path": "/Software Dev/MLK RAG/sample_company_report.txt"
      },
      "type": "n8n-nodes-base.ftp",
      "typeVersion": 1,
      "position": [
        1020,
        -300
      ],
      "id": "84ad5599-6985-4671-93c5-fdfe2ab01721",
      "name": "FTP1",
      "credentials": {
        "sftp": {
          "id": "Dr2xIWUon9QlHWEm",
          "name": "FTP account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "=documentscontext",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.1,
      "position": [
        2720,
        -300
      ],
      "id": "fdd7d79e-1578-4d49-b6a9-ac15cd9425ae",
      "name": "Qdrant Vector Store2",
      "credentials": {
        "qdrantApi": {
          "id": "sFfERYppMeBnFNeA",
          "name": "Local QdrantApi database"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-ada-002",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        2660,
        20
      ],
      "id": "15dc8716-a3e8-45d9-ad04-e145312e8dfb",
      "name": "Embeddings OpenAI2",
      "credentials": {
        "openAiApi": {
          "id": "131kurNlXcu1qyJZ",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2780,
        -100
      ],
      "id": "258035fe-94b3-4a27-b1a7-67fd530a4edd",
      "name": "Default Data Loader1"
    },
    {
      "parameters": {
        "content": "## Ingestion WITH Context\n\n",
        "height": 780,
        "width": 2220,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        820,
        -360
      ],
      "typeVersion": 1,
      "id": "c4cc6a62-039e-4bf8-a8d0-ad8210d42860",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"data\": {{ JSON.stringify($json.data) }}\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1540,
        -280
      ],
      "id": "e7b08693-7f44-4730-8949-cc995672c494",
      "name": "Document Data"
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1320,
        -300
      ],
      "id": "a4fe21e3-6bb6-4a47-8f73-8d5cf7173917",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $binary.data.fileType }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "ac93d75e-0b80-49fc-9f1c-488d9b4be4ce"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "TXT"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fd4f2f67-aa57-4467-b34a-9f2f9e496423",
                    "leftValue": "={{ $binary.data.fileType }}",
                    "rightValue": "pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a8d72e67-9485-4aba-ba52-ec5895354221",
                    "leftValue": "={{ $binary.data.fileType }}",
                    "rightValue": "docx",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DOCX"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1020,
        -60
      ],
      "id": "25890c72-5283-45ff-96fb-7bfcc9dbb2ed",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1320,
        -140
      ],
      "id": "5b555d3f-72b2-4cf3-aef1-1d900a51b4c3",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "jsCode": "const chunkSize = 250;\nconst chunkOverlap = 50;\nconst text = $input.item.json.data.replace(/\\n/, '');\n\nconst chunks = [];\nlet remainingText = text;\n\nwhile (remainingText.length > 0) {\n  let splitPoint;\n\n  // Try splitting at paragraph level first\n  splitPoint = remainingText.lastIndexOf(\"\\n\\n\", chunkSize);\n\n  // If no paragraph split, try splitting at sentence level\n  if (splitPoint === -1) {\n    splitPoint = remainingText.lastIndexOf(\". \", chunkSize);\n  }\n\n  // If no sentence split, try splitting at word level\n  if (splitPoint === -1) {\n    splitPoint = remainingText.lastIndexOf(\" \", chunkSize);\n  }\n\n  // If still no split point, force cut at chunkSize\n  if (splitPoint === -1 || splitPoint < chunkSize * 0.5) {\n    splitPoint = chunkSize; // Hard split if no good split point\n  }\n\n  // Extract chunk and adjust remaining text with overlap\n  let chunk = remainingText.substring(0, splitPoint).trim();\n  chunks.push(chunk);\n\n  // Move the pointer forward while keeping the overlap\n  remainingText = remainingText.substring(Math.max(0, splitPoint - chunkOverlap)).trim();\n\n  // Break if remaining text is too small to form another chunk\n  if (remainingText.length < chunkSize * 0.2) {\n    chunks.push(remainingText);\n    break;\n  }\n}\n\nreturn { chunks };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1700,
        -280
      ],
      "id": "aea82d93-3bdb-4587-bb99-1a730d79c2de",
      "name": "Recursive  Splitter"
    },
    {
      "parameters": {
        "fieldToSplitOut": "chunks",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1860,
        -280
      ],
      "id": "c4d700ed-ea3a-4384-937d-952f43051032",
      "name": "Split Out"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2120,
        0
      ],
      "id": "8a888980-f703-4c83-ae78-289f0c6dc1d2",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "131kurNlXcu1qyJZ",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "text",
              "separateBy": "other",
              "customSeparator": "###SPLIT###"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1.1,
      "position": [
        2440,
        -280
      ],
      "id": "468f10cc-4cdc-4d23-852f-3daa438b20c9",
      "name": "Summarize"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<document>\n{{ $('Document Data').item.json.data }}\n</document>\n\nHere is the chunk we want to situate within the overall document:\n\n<chunk>\n{{$json.chunks}}\n</chunk>\n\nPlease:  \n- Provide a short and succinct **context** to situate this chunk within the document for improved search retrieval.  \n- Return the **original chunk** exactly as provided unless a correction is necessary.  \n- If the chunk contains an **incomplete number, percentage, or entity**, correct it using the full document.  \n- If part of a **sentence is cut off**, reconstruct the missing words only if necessary for clarity.  \n- If the chunk is part of a table, include the complete table entry to maintain data integrity.  \n- Do not add any additional explanations or formatting beyond the required output.  \n\nFill in the following format:  \n[succinct context] : [original chunk or corrected version if necessary]  \n\nYour response should contain only the text that replaces these placeholders, without including the placeholder labels themselves.\n"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        2080,
        -280
      ],
      "id": "6d35745d-7be6-498d-bdb1-a6858c5f9810",
      "name": "Add Context"
    },
    {
      "parameters": {
        "separator": "###SPLIT###",
        "chunkSize": 250,
        "chunkOverlap": 50
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2860,
        120
      ],
      "id": "e2da9ea5-9c45-4bfc-a349-195ee6de3509",
      "name": "Character Text Splitter"
    },
    {
      "parameters": {
        "content": "## RAG",
        "height": 80,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -540,
        -480
      ],
      "typeVersion": 1,
      "id": "0055cc1f-9ffe-47f2-84ee-5b34d1fea829",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "protocol": "sftp",
        "path": "={{ $json.path }}"
      },
      "type": "n8n-nodes-base.ftp",
      "typeVersion": 1,
      "position": [
        4420,
        -300
      ],
      "id": "dc6bc5b9-11da-4569-819c-152844c6f5d5",
      "name": "FTP2",
      "credentials": {
        "sftp": {
          "id": "Dr2xIWUon9QlHWEm",
          "name": "FTP account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "=documentsmetadata",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.1,
      "position": [
        5160,
        -280
      ],
      "id": "9ef94c49-327c-459c-9602-9a9dccbbc0d2",
      "name": "Qdrant Vector Store3",
      "credentials": {
        "qdrantApi": {
          "id": "sFfERYppMeBnFNeA",
          "name": "Local QdrantApi database"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-ada-002",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        5100,
        40
      ],
      "id": "8e253685-77f7-48f6-bb3e-afa2ff19e98f",
      "name": "Embeddings OpenAI3",
      "credentials": {
        "openAiApi": {
          "id": "131kurNlXcu1qyJZ",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "file_id",
                "value": "={{ $('Switch1').item.json.uniqueId }}"
              },
              {
                "name": "=modifyTime",
                "value": "={{ $('FTP2').item.json.modifyTime }}"
              },
              {
                "name": "size",
                "value": "={{ $('FTP2').item.json.size }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        5220,
        -80
      ],
      "id": "80da3ee2-a140-4eb4-b87c-3e49234292dc",
      "name": "Default Data Loader2"
    },
    {
      "parameters": {
        "content": "## Ingestion WITH Metadata and loop\n\n",
        "height": 780,
        "width": 1920,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3200,
        -360
      ],
      "typeVersion": 1,
      "id": "ad8d5aec-c59f-4d62-acb9-6c52c79d54c7",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"data\": {{ JSON.stringify($json.data) }}\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4980,
        -280
      ],
      "id": "b93146bc-7424-413a-bd78-ae9c2060b235",
      "name": "Document Data1"
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        4780,
        -380
      ],
      "id": "2320b5d1-0d24-4c94-8dc5-a5ad0bf00c5f",
      "name": "Extract from File2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $binary.data.fileType }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "ac93d75e-0b80-49fc-9f1c-488d9b4be4ce"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "TXT"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fd4f2f67-aa57-4467-b34a-9f2f9e496423",
                    "leftValue": "={{ $binary.data.fileType }}",
                    "rightValue": "pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a8d72e67-9485-4aba-ba52-ec5895354221",
                    "leftValue": "={{ $binary.data.fileType }}",
                    "rightValue": "docx",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DOCX"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        4540,
        -320
      ],
      "id": "fb37c283-f51c-458a-adce-84d29cd0fb64",
      "name": "Switch1"
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        4800,
        -200
      ],
      "id": "5e14bb18-b0fa-4010-b431-47bf75d1ffd1",
      "name": "Extract from File3"
    },
    {
      "parameters": {
        "chunkSize": 250,
        "chunkOverlap": 50,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        5320,
        140
      ],
      "id": "184da82e-fe30-4fa7-b2b2-7e99b51ff9c5",
      "name": "Recursive Character Text Splitter1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        3220,
        -280
      ],
      "id": "96f7f80a-81a4-4ca1-aaee-9a8d2cbc9afb",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "jsCode": "const path = $input.item.json.path;\nconst name = $input.item.json.size;\nconst mtime = $input.item.json.modifyTime || '';\n\nconst id = `${path}-${name}-${mtime}`;\nreturn [{ json: { uniqueId: id, ...$input.item.json } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3660,
        -300
      ],
      "id": "3275ecbd-49be-4317-9edc-deccde8398f3",
      "name": "Code"
    },
    {
      "parameters": {
        "protocol": "sftp",
        "operation": "list",
        "path": "/Software Dev/MLK RAG"
      },
      "type": "n8n-nodes-base.ftp",
      "typeVersion": 1,
      "position": [
        3360,
        -300
      ],
      "id": "15a9930a-d49d-4264-a39d-5fe1e3bd5fa7",
      "name": "FTP3",
      "credentials": {
        "sftp": {
          "id": "Dr2xIWUon9QlHWEm",
          "name": "FTP account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3500,
        -240
      ],
      "id": "1b6dd05b-e071-47a9-bff4-18b1cdac97cf",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "content": "## possibly add delete records to avoid duplicates "
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3940,
        -320
      ],
      "typeVersion": 1,
      "id": "92408b90-5db8-4710-a997-bda4d4366547",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "operation": "deleteCollection",
        "collectionName": {
          "__rl": true,
          "value": "documentsmetadata",
          "mode": "list",
          "cachedResultName": "documentsmetadata"
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-qdrant.qdrant",
      "typeVersion": 1,
      "position": [
        3660,
        -560
      ],
      "id": "a1bd7af7-61b4-4d17-892c-888fb5389c96",
      "name": "Delete Collection",
      "credentials": {
        "qdrantRestApi": {
          "id": "ibe1hoOQkDZ7ztnR",
          "name": "Qdrant account"
        }
      }
    },
    {
      "parameters": {
        "content": "## CAG (newer more popular)\ncache augmented generation \n",
        "height": 80,
        "width": 380,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -540,
        1460
      ],
      "typeVersion": 1,
      "id": "e73b9cda-63d7-4fc1-89c2-d8c7b99e19a6",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "protocol": "sftp",
        "path": "/Software Dev/MLK RAG/sample_company_report.txt"
      },
      "type": "n8n-nodes-base.ftp",
      "typeVersion": 1,
      "position": [
        -320,
        1640
      ],
      "id": "1d180bd3-d524-4bb6-899e-c54a0803dccb",
      "name": "FTP4",
      "credentials": {
        "sftp": {
          "id": "Dr2xIWUon9QlHWEm",
          "name": "FTP account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"data\": {{ JSON.stringify($json.data) }}\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        380,
        1420
      ],
      "id": "d948b998-c8da-4a32-9e68-ab137f696d7a",
      "name": "Document Data2"
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        160,
        1400
      ],
      "id": "02e8dfa8-c13b-4c5b-9ae5-5c7d6fd56e9d",
      "name": "Extract from File4"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $binary.data.fileType }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "ac93d75e-0b80-49fc-9f1c-488d9b4be4ce"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "TXT"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fd4f2f67-aa57-4467-b34a-9f2f9e496423",
                    "leftValue": "={{ $binary.data.fileType }}",
                    "rightValue": "pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a8d72e67-9485-4aba-ba52-ec5895354221",
                    "leftValue": "={{ $binary.data.fileType }}",
                    "rightValue": "docx",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DOCX"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -140,
        1640
      ],
      "id": "b61c1633-0281-4b18-b78f-c052feab62e7",
      "name": "Switch2"
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        160,
        1560
      ],
      "id": "68ab51d4-455a-48aa-af38-223bf4fc718b",
      "name": "Extract from File5"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=## Document\n{{ $json.data }}\n\n## Query\n{{ $('When chat message received').item.json.chatInput }}"
            }
          ]
        },
        "simplify": false,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        600,
        1420
      ],
      "id": "4672def2-c7f4-4794-83c3-7c87c80f9183",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "131kurNlXcu1qyJZ",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {
    "Summarize": [
      {
        "json": {
          "concatenated_text": "Company Monthly Report July 2025, Executive Summary on company growth and revenue drivers in July 2025 : Company Monthly ReportJuly 2025\n\nPage 1\n\nSection 1: Executive Summary\nThe company experienced steady growth in July 2025, with an overall revenue increase of 8% compared to June. Key drivers were new product launches and expanded marketing campaigns in North America and Europe.###SPLIT###Executive Summary section describing growth drivers and financial outcomes : product launches and expanded marketing campaigns in North America and Europe. Operational costs remained stable, leading to improved profit margins.###SPLIT###Sales Performance section detailing units sold, revenue, and regional performance following the Executive Summary on company growth and profit margins : rained stable, leading to improved profit margins.\n\nSection 2: Sales Performance\n- Total units sold: 125,000\n- Total revenue: $3,450,000\n- Top performing region: North America\n- Lowest performing region: South America\n- Notable product: X-Phone 12 Pro, with 35,000 units sold###SPLIT###Sales Performance section detailing regional performance and notable products, transitioning into Customer Feedback section : on: South America\n- Notable product: X-Phone 12 Pro, with 35,000 units sold\n\nPage 2\n\nSection 3: Customer Feedback\nCustomer satisfaction ratings improved slightly to 87%. The main positive feedback focused on product quality and customer service responsiveness. However, several complaints were recorded regarding delivery delays and product availability in certain regions.###SPLIT###Customer feedback summary highlighting key positive aspects and noted complaints : used on product quality and customer service responsiveness. However, several complaints were recorded regarding delivery delays and product availability in certain regions.###SPLIT###Section 3: Customer Feedback and beginning of Section 4: Technical Issues, detailing customer complaints and reported technical problems during July 2025:  \nelays and product availability in certain regions.\n\nSection 4: Technical Issues  \nSeveral technical issues were reported during the month:  \n- Incident #101: Server downtime of 2 hours affecting website availability on July 12.  \n- Incident #102: Payment gateway errors causing failed transactions on July 18.###SPLIT###Section 4: Technical Issues reporting incidents in July 2025 :  \navailability on July 12.  \n- Incident #102: Payment gateway errors causing failed transactions on July 18.  \n- Ongoing issue with mobile app crashes on iOS 14, under investigation.  \n\nPage 3###SPLIT###Technical issues summary leading into upcoming projects section on planned launches and team expansions in Q3 : pp crashes on iOS 14, under investigation.\n\nPage 3\n\nSection 5: Upcoming Projects\n- Launch of the X-Phone 13 scheduled for September 2025.\n- Implementation of new CRM system starting August 2025.\n- Expansion of data analytics team with 5 new hires planned in Q3.###SPLIT###Section 5 and Section 6: Details on upcoming projects and team changes including new hires in data analytics, marketing team expansions, customer support shift increases, and IT training on cloud security. : Expansion of data analytics team with 5 new hires planned in Q3.\n\nSection 6: Team Updates\n- Marketing team welcomed two new managers.\n- Customer support increased shifts to cover 24/7 service.\n- IT department undergoing training on cloud security best practices.###SPLIT###Section 6: Team Updates and Section 7: Financial Overview on Page 4 of the report, detailing recent team changes and key financial metrics including expenses, profit, investment, and forecast.\n\ntment undergoing training on cloud security best practices.\n\nPage 4\n\nSection 7: Financial Overview\n- Operating expenses: $1,200,000\n- Net profit: $950,000\n- R&D investment: $400,000\n- Forecast for next quarter: revenue growth of 10% expected.###SPLIT###Section 7: Financial Overview and Section 8: Compliance and Risk Management at the end of the report : for next quarter: revenue growth of 10% expected.\n\nSection 8: Compliance and Risk Management\n- Completed internal audit with no major findings.\n- Updated data privacy policies in line with new regulations.\n- Risk assessment ongoing for supply chain vulnerabilities.###SPLIT###Section 8: Compliance and Risk Management at the end of the report detailing audit results, policy updates, and ongoing risk assessment.  \n- Risk assessment ongoing for supply chain vulnerabilities.\n\nEnd of Report###SPLIT###Section 2: Sales Performance  \n- Total units sold: 125,000  \n- Total revenue: $3,450,000  \n- Top performing region: North America  \n- Lowest performing region: South America  \n- Notable product: X-Phone 12 Pro, with 35,000 units sold"
        }
      }
    ],
    "Add Context": [
      {
        "json": {
          "text": "Company Monthly Report July 2025, Executive Summary on company growth and revenue drivers in July 2025 : Company Monthly ReportJuly 2025\n\nPage 1\n\nSection 1: Executive Summary\nThe company experienced steady growth in July 2025, with an overall revenue increase of 8% compared to June. Key drivers were new product launches and expanded marketing campaigns in North America and Europe."
        }
      },
      {
        "json": {
          "text": "Executive Summary section describing growth drivers and financial outcomes : product launches and expanded marketing campaigns in North America and Europe. Operational costs remained stable, leading to improved profit margins."
        }
      },
      {
        "json": {
          "text": "Sales Performance section detailing units sold, revenue, and regional performance following the Executive Summary on company growth and profit margins : rained stable, leading to improved profit margins.\n\nSection 2: Sales Performance\n- Total units sold: 125,000\n- Total revenue: $3,450,000\n- Top performing region: North America\n- Lowest performing region: South America\n- Notable product: X-Phone 12 Pro, with 35,000 units sold"
        }
      },
      {
        "json": {
          "text": "Sales Performance section detailing regional performance and notable products, transitioning into Customer Feedback section : on: South America\n- Notable product: X-Phone 12 Pro, with 35,000 units sold\n\nPage 2\n\nSection 3: Customer Feedback\nCustomer satisfaction ratings improved slightly to 87%. The main positive feedback focused on product quality and customer service responsiveness. However, several complaints were recorded regarding delivery delays and product availability in certain regions."
        }
      },
      {
        "json": {
          "text": "Customer feedback summary highlighting key positive aspects and noted complaints : used on product quality and customer service responsiveness. However, several complaints were recorded regarding delivery delays and product availability in certain regions."
        }
      },
      {
        "json": {
          "text": "Section 3: Customer Feedback and beginning of Section 4: Technical Issues, detailing customer complaints and reported technical problems during July 2025:  \nelays and product availability in certain regions.\n\nSection 4: Technical Issues  \nSeveral technical issues were reported during the month:  \n- Incident #101: Server downtime of 2 hours affecting website availability on July 12.  \n- Incident #102: Payment gateway errors causing failed transactions on July 18."
        }
      },
      {
        "json": {
          "text": "Section 4: Technical Issues reporting incidents in July 2025 :  \navailability on July 12.  \n- Incident #102: Payment gateway errors causing failed transactions on July 18.  \n- Ongoing issue with mobile app crashes on iOS 14, under investigation.  \n\nPage 3"
        }
      },
      {
        "json": {
          "text": "Technical issues summary leading into upcoming projects section on planned launches and team expansions in Q3 : pp crashes on iOS 14, under investigation.\n\nPage 3\n\nSection 5: Upcoming Projects\n- Launch of the X-Phone 13 scheduled for September 2025.\n- Implementation of new CRM system starting August 2025.\n- Expansion of data analytics team with 5 new hires planned in Q3."
        }
      },
      {
        "json": {
          "text": "Section 5 and Section 6: Details on upcoming projects and team changes including new hires in data analytics, marketing team expansions, customer support shift increases, and IT training on cloud security. : Expansion of data analytics team with 5 new hires planned in Q3.\n\nSection 6: Team Updates\n- Marketing team welcomed two new managers.\n- Customer support increased shifts to cover 24/7 service.\n- IT department undergoing training on cloud security best practices."
        }
      },
      {
        "json": {
          "text": "Section 6: Team Updates and Section 7: Financial Overview on Page 4 of the report, detailing recent team changes and key financial metrics including expenses, profit, investment, and forecast.\n\ntment undergoing training on cloud security best practices.\n\nPage 4\n\nSection 7: Financial Overview\n- Operating expenses: $1,200,000\n- Net profit: $950,000\n- R&D investment: $400,000\n- Forecast for next quarter: revenue growth of 10% expected."
        }
      },
      {
        "json": {
          "text": "Section 7: Financial Overview and Section 8: Compliance and Risk Management at the end of the report : for next quarter: revenue growth of 10% expected.\n\nSection 8: Compliance and Risk Management\n- Completed internal audit with no major findings.\n- Updated data privacy policies in line with new regulations.\n- Risk assessment ongoing for supply chain vulnerabilities."
        }
      },
      {
        "json": {
          "text": "Section 8: Compliance and Risk Management at the end of the report detailing audit results, policy updates, and ongoing risk assessment.  \n- Risk assessment ongoing for supply chain vulnerabilities.\n\nEnd of Report"
        }
      },
      {
        "json": {
          "text": "Section 2: Sales Performance  \n- Total units sold: 125,000  \n- Total revenue: $3,450,000  \n- Top performing region: North America  \n- Lowest performing region: South America  \n- Notable product: X-Phone 12 Pro, with 35,000 units sold"
        }
      }
    ]
  },
  "connections": {
    "FTP": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store": {
      "main": [
        []
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "FTP4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "FTP1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store2",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Document Data": {
      "main": [
        [
          {
            "node": "Recursive  Splitter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Document Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Document Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recursive  Splitter": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Add Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Add Context",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Add Context": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FTP2": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI3": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store3",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader2": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store3",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Document Data1": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File2": {
      "main": [
        [
          {
            "node": "Document Data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Extract from File2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File3": {
      "main": [
        [
          {
            "node": "Document Data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader2",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "FTP3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "FTP2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FTP3": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store3": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File4": {
      "main": [
        [
          {
            "node": "Document Data2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Extract from File4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File5": {
      "main": [
        [
          {
            "node": "Document Data2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FTP4": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Document Data2": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "2ff1a0e8-31e5-4faa-9d63-24bd14bd9e04",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "xlMJtaaFPqcFNtq2",
  "tags": []
}